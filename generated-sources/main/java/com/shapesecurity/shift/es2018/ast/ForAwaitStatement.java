// Generated by ast.js
/**
 * Copyright 2018 Shape Security, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.shapesecurity.shift.es2018.ast;

import javax.annotation.Nonnull;
import com.shapesecurity.functional.data.HashCodeBuilder;

public class ForAwaitStatement extends IterationStatement {
    @Nonnull
    public final VariableDeclarationAssignmentTarget left;

    @Nonnull
    public final Expression right;


    public ForAwaitStatement (@Nonnull VariableDeclarationAssignmentTarget left, @Nonnull Expression right, @Nonnull Statement body) {
        super(body);
        this.left = left;
        this.right = right;
    }


    @Override
    public boolean equals(Object object) {
        return object instanceof ForAwaitStatement && this.left.equals(((ForAwaitStatement) object).left) && this.right.equals(((ForAwaitStatement) object).right) && this.body.equals(((ForAwaitStatement) object).body);
    }


    @Override
    public int hashCode() {
        int code = HashCodeBuilder.put(0, "ForAwaitStatement");
        code = HashCodeBuilder.put(code, this.left);
        code = HashCodeBuilder.put(code, this.right);
        code = HashCodeBuilder.put(code, this.body);
        return code;
    }

}
